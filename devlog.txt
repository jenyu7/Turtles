Turtles
Jen Yu 
Eugene Thomas
Allard Peng
pd 3
---------------------
El Cazador

/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- There were issues with methods being static and nonstatic, which were fixed by instantiation. 
- At first, we were unclear on our vision of how to code the driver. Using a Grid object was a given, but what we mainly debated over was the usage of an object vs. a 2D Array in order to represent the empty spaces in the Grid. In the end, we settled on the object, because it was easier to assign attributes, instance variables, and use instaceOf to determine what it was. 
- What should be in an MVP? We discussed this, about what aspects were necessary and what weren't. In the end, we decided that the physical Grid parts and the parts where empty squares with no predators/prey around them were not necessary towards functionality, and were best wrangled with later. 
- Arguments about superclasses vs. interfaces. In the end, we decided to use the Animal superclass and not define each individual animal in a class, but rather spawn either a Predator or a Prey. Both Predator and Prey are subclasses of Animal, so when the driver is run and the grid is created, one variable type takes care of both of these objects. 
- Time Management. Early on, we split up the work, but some of the kinks hadn't been worked out yet, so we fell a little behind. However. this project in its MVP version should work fine. 
- Was criticized by Konstatinovich for having a public variable. Made all variables either private or protected out of shame. In order to retain access, wrote Accessor and Mutator methods. [Jen]
- Could not access some mutators and accessors. Fixed by TYPECASTING!! 

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- @Eugene: What is coord??
- How to display the Grid (String manipulation >:( )
- Opening more squares aghh
    - how to escape this forever loop???
- Ok, so there was a bug with Woo.java in the v.1.1 Cazador dir. Basically, whenever the user would type in the coordinates for a box on the grid where there were no predators around it, the program would dive into a forever loop.

Basically, here's the bug. This error does not happen EVERYTIME you hit a square with nothing around it and try to open the squares next to it. There are two specific cases: 1. Your square has nothing around it, and the some or all of the squares around it also have nothing around them; 2. Your square has nothing around it, but the squares around all have something around them. The code only runs into the StackOverflowError in the FIRST CASE. If there are things around the surrounding squares, the code is fine. To this error, I have attached a code snippet of the instance of where opening the surrounding squares DID work.

Of course, we will have to translate all of this into the graphics of the grid, but that's an issue to be resolved in a later, more advanced version (which you can work on, as I'm trying to resolve this bug). My assumption is that when a square around the square the user chose (which has nothing around it already), ALSO has nothing around it, it begins to check the original square (nothing around), and then the original square checks that same surrounding square (nothing around again), and then the program just flips flops between a few coordinates. If you run it with my current diagnostic prints, you can see the flip flopping of coordinates; some of the coordinates in the two arrays are never reached at all, depending on where the surrounding empty square's coordinates are reached when the for loop is run.


COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 2D Arrays suck

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Changed from empty square to the "ghost" concept, back to creating an array storing # of predators/prey around a box
  - ANDDD changed back to the object, now named Empty

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- noSleep CS = new noSleep();
- noSleep instanceOf FatigueAndPain
- FatigueAndPain extends WhyIDoDis


 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/
==============================================================
**Detailed Devlog begins 1/12. If any of you (Eugene, Allard) 
want to expand below, feel free to. I'll just speak for myself.

01-15-17
--------------------------------------------------------------
JY: 
- Was trying to debug the surround squares
- Added mechanism of printing stories when either prey or predators are caught
- Added new ArrayList<Integer> damages to Predator class
- Added mechanism of personalized damages based on the type of predator spawned

01-14-17
--------------------------------------------------------------
JY: 
- Final List of Predators: Jen the Jaguar, Zoey the Zebra, Bonnie the Bear, Dasha the Dartfrog, Masha the Mammoth, Yiling the Yak, Cody the Crocodile
- Final List of Prey: Ida the Iguana, Rachel the Rabbit, Jessica the Jellyfish, Patricia the Pangolin, Eugene the Egret, Allard the Armadillo, Jenn the Jackrabbit
- Completed stories ArrayList<String> READ THE PREY AND PREDATOR FILES TO SEE THE STORIES

01-13-17
--------------------------------------------------------------
JY: 
- Edited comments in code
- Began work on creating the storyline of the game
- Added new ArrayList<String> stories to both Predator and Prey
- Uploaded most recent flowchart made with draw.io

01-12-17
--------------------------------------------------------------
JY: 
- Edited Animal.java, Prey.java, Empty.java (overloaded), 
Predator.java, Cazador.java. Removed certain methods and changed
signatures. Everything is denoted in comments in code. 
- Wrote Woo.java, the driver file. It is very long, but also 
thorough. Should be pretty clean. Check it out, comments are
inside the code for comprehension. 
- Tidied up all .java files: added comments, fixed formatting,
other things that trigger my strange OCD. 

01-11-17
--------------------------------------------------------------
ET: 
Empty.java; Animal.java; Prey.java; Predator.java; populate 
method for Grid; You.java (deleted); Grid2.java (ET)
JY: 
Cazador.java 
AP: 
Grid.java


01-10-17
--------------------------------------------------------------
JY: 
Worked on Flowchart
AP:
Grid.java

01-09-17
--------------------------------------------------------------
ET, AP: 
Worked on UML Diagram

01-08-17
--------------------------------------------------------------
JY: 
Worked on Project Proposal

==============================================================
